diff --git a/node_modules/ofetch/dist/node.mjs b/node_modules/ofetch/dist/node.mjs
index 4c64f13..ce8ebd7 100644
--- a/node_modules/ofetch/dist/node.mjs
+++ b/node_modules/ofetch/dist/node.mjs
@@ -1,31 +1,13 @@
-import http from 'node:http';
-import https from 'node:https';
-import nodeFetch, { Headers as Headers$1 } from 'node-fetch-native';
 import { c as createFetch } from './shared/ofetch.5cb01515.mjs';
 export { F as FetchError, c as createFetch, a as createFetchError } from './shared/ofetch.5cb01515.mjs';
-import 'destr';
-import 'ufo';
 
-function createNodeFetch() {
-  const useKeepAlive = JSON.parse(process.env.FETCH_KEEP_ALIVE || "false");
-  if (!useKeepAlive) {
-    return nodeFetch;
-  }
-  const agentOptions = { keepAlive: true };
-  const httpAgent = new http.Agent(agentOptions);
-  const httpsAgent = new https.Agent(agentOptions);
-  const nodeFetchOptions = {
-    agent(parsedURL) {
-      return parsedURL.protocol === "http:" ? httpAgent : httpsAgent;
-    }
-  };
-  return function nodeFetchWithKeepAlive(input, init) {
-    return nodeFetch(input, { ...nodeFetchOptions, ...init });
-  };
-}
-const fetch = globalThis.fetch || createNodeFetch();
-const Headers = globalThis.Headers || Headers$1;
-const ofetch = createFetch({ fetch, Headers });
+
+console.log("ofetch已更新");
+const vercelFetch = fetch;
+const vercelHeaders =Headers;
+const xfetch = vercelFetch || globalThis.fetch;
+const xHeaders = vercelHeaders || globalThis.Headers;
+const ofetch = createFetch({ fetch: xfetch, Headers: xHeaders });
 const $fetch = ofetch;
 
-export { $fetch, Headers, createNodeFetch, fetch, ofetch };
+export { $fetch, xHeaders as Headers, xfetch as fetch, ofetch };
